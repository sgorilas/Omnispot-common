<?xml version="1.0" encoding="UTF-8"?>

<project name="Digital Signage application" basedir="." default="generate.domain.objects">
	<description>Ke.S.Di.P. E.P.E. main buildfile</description>
	
	<property file="build.properties"/>
	<property file="./profiles/${target.env}.properties"/>
	
	<property name="project.base.dir" location=".."/>
	
	<property name="common.base.dir" location="${project.base.dir}/common"/>
	<property name="common.src.dir" location="${common.base.dir}/src"/>
	<property name="common.build.file" location="${common.base.dir}/build.xml"/>
	<property name="common.dist.file" location="${common.base.dir}/dist/common.jar"/>
	
	<property name="logic.base.dir" location="${project.base.dir}/business-logic"/>
	<property name="logic.src.dir" location="${logic.base.dir}/src"/>
	<property name="logic.build.file" location="${logic.base.dir}/build.xml"/>
	<property name="logic.dist.file" location="${logic.base.dir}/dist/logic.jar"/>

	<property name="bootstrap.base.dir" location="${project.base.dir}/bootstrap"/>
	<property name="bootstrap.src.dir" location="${bootstrap.base.dir}/src"/>
	<property name="bootstrap.build.file" location="${bootstrap.base.dir}/build.xml"/>
	<property name="bootstrap.dist.file" location="${bootstrap.base.dir}/dist/bootstrap.jar"/>
	
	<!-- Explicitly "values" instead of "locations", because InstallJammer does not work -->
	<property name="player.base.dir" value="${project.base.dir}/player"/>
	<property name="player.src.dir" value="${player.base.dir}/src"/>
	<property name="player.build.file" value="${player.base.dir}/build.xml"/>
	<property name="player.dist.dir" value="${player.base.dir}/dist" />
	<property name="player.dist.file" value="${player.dist.dir}/player.jar"/>
	<property name="player.installer.dir" value="${player.dist.dir}/installer" />
	
	<property name="admin-console.base.dir" location="${project.base.dir}/admin-console"/>
	<property name="admin-console.build.file" location="${admin-console.base.dir}/build.xml"/>
	<property name="admin-console.dist.file" location="${admin-console.base.dir}/dist/admin-console.war"/>
	
	<property name="license-console.base.dir" location="${project.base.dir}/license-console"/>
	<property name="license-console.build.file" location="${license-console.base.dir}/build.xml"/>
	<property name="license-console.dist.file" location="${license-console.base.dir}/dist/license-console.war"/>

	<property name="etc.base.dir" location="${project.base.dir}/etc"/>
	<property name="etc.ant.scripts.dir" location="${etc.base.dir}/ant"/>
	<property name="etc.db.create.file" location="${etc.ant.scripts.dir}/create-db.xml"/>
	<property name="etc.sql.scripts.dir" location="${etc.base.dir}/sql"/>
	<property name="etc.lib.dir" location="${etc.base.dir}/lib"/>
	<property name="etc.installer.dir" location="${etc.base.dir}/installer"/>
	
	<property name="designer.base.dir" location="${project.base.dir}/com.kesdip.designer"/>
	<property name="designer.build.dir" location="${project.base.dir}/com.kesdip.designer.build"/>
	<property name="designer.feature.dir" location="${project.base.dir}/com.kesdip.designer.feature"/>
	<property name="designer.help.dir" location="${project.base.dir}/com.kesdip.designer.help"/>
	<property name="designer.preview.dir" location="${project.base.dir}/com.kesdip.designer.preview"/>
	<property name="designer.build.file" location="${project.base.dir}/com.kesdip.designer.build/build.xml"/>
	<property name="designer.dist.dir"
		location="${project.base.dir}/designer.build/I.DesignerBuild"/>
	<property name="designer.dist.filename"
		value="DesignerBuild-win32.win32.x86.zip"/>
	<property name="designer.dist.file"
		location="${designer.dist.dir}/${designer.dist.filename}"/>
	
	<property name="server.installer.dir"
		value="${project.base.dir}/designer.build/installer"/>
	
	<property name="preview.lib.dir" location="${project.base.dir}/com.kesdip.designer.preview/lib"/>
	<property name="preview.src.dir" location="${project.base.dir}/com.kesdip.designer.preview/src"/>
	
	<property name="designer.lib.dir" location="${project.base.dir}/com.kesdip.designer/lib"/>
	<property name="comfyj.license.dir" location="${etc.base.dir}/license/comfyj/runtime" />
	
	
	<import file="${etc.ant.scripts.dir}/common-targets.xml"/>

	<!-- All of ant-contrib tasks -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${etc.lib.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>	
		
	<target name="build.common">
		<ant antfile="${common.build.file}" target="common.init" inheritrefs="true"/>
		<ant antfile="${common.build.file}" target="common.compile" inheritrefs="true"/>
		<ant antfile="${common.build.file}" target="common.dist" inheritrefs="true"/>
	</target>

	<target name="build.logic" depends="build.common, build.player">
		<ant antfile="${logic.build.file}" target="logic.init" inheritrefs="true"/>
		<ant antfile="${logic.build.file}" target="logic.compile" inheritrefs="true"/>
		<ant antfile="${logic.build.file}" target="logic.dist" inheritrefs="true"/>
	</target>

	<target name="build.bootstrap" depends="build.common, build.logic, build.player">
		<ant antfile="${bootstrap.build.file}" target="bootstrap.init" inheritrefs="true"/>
		<ant antfile="${bootstrap.build.file}" target="bootstrap.compile" inheritrefs="true"/>
		<ant antfile="${bootstrap.build.file}" target="bootstrap.dist" inheritrefs="true"/>
	</target>

	<target name="build.player" depends="build.common">
		<ant antfile="${player.build.file}" target="player.init" inheritrefs="true"/>
		<ant antfile="${player.build.file}" target="player.compile" inheritrefs="true"/>
		<ant antfile="${player.build.file}" target="player.dist" inheritrefs="true"/>
	</target>

	<target name="build.admin-console" depends="build.common, build.logic, build.bootstrap">
		<ant antfile="${admin-console.build.file}" target="admin-console.init" inheritrefs="true"/>
		<ant antfile="${admin-console.build.file}" target="admin-console.compile" inheritrefs="true"/>
		<ant antfile="${admin-console.build.file}" target="admin-console.dist" inheritrefs="true"/>
	</target>
	
	<target name="build.license-console" depends="build.common, build.logic">
		<ant antfile="${license-console.build.file}" target="license-console.init" inheritrefs="true"/>
		<ant antfile="${license-console.build.file}" target="license-console.compile" inheritrefs="true"/>
		<ant antfile="${license-console.build.file}" target="license-console.dist" inheritrefs="true"/>
	</target>

	<target name="clean" 
		description="Cleans project directories">
		<ant antfile="${admin-console.build.file}" target="admin-console.clean" inheritrefs="true"/>
		<ant antfile="${license-console.build.file}" target="license-console.clean" inheritrefs="true"/>
		<ant antfile="${bootstrap.build.file}" target="bootstrap.clean" inheritrefs="true"/>
		<ant antfile="${player.build.file}" target="player.clean" inheritrefs="true"/>
		<ant antfile="${common.build.file}" target="common.clean" inheritrefs="true"/>
		<ant antfile="${logic.build.file}" target="logic.clean" inheritrefs="true"/>
		<ant antfile="${designer.build.file}" dir="${designer.build.dir}"
			target="clean" inheritrefs="true"/>
	</target>
		
	<target name="copy.files.to.designer" depends="build.player,build.common,build.admin-console"
		description="Copy the necessary files from project distributables to com.kesdip.designer.preview/lib and com.kesdip.designer/lib">
		<copy todir="${preview.lib.dir}" flatten="true">
			<fileset dir="${etc.base.dir}/.." includesfile="${player.base.dir}/shared.jars"/>
		</copy>
		<copy todir="${preview.lib.dir}" file="${common.dist.file}"/>
		<copy todir="${preview.lib.dir}" file="${player.dist.file}"/>
		
		<copy todir="${designer.lib.dir}" file="${common.dist.file}"/>
		<copy todir="${designer.lib.dir}" file="${etc.lib.dir}/quartz/quartz-1.6.3.jar"/>
		<copy todir="${designer.lib.dir}" file="${etc.lib.dir}/log4j/log4j-1.2.14.jar"/>
		<copy todir="${designer.lib.dir}" file="${etc.lib.dir}/apache-commons/commons-httpclient-3.1.jar"/>
		<copy todir="${designer.lib.dir}" file="${etc.lib.dir}/apache-commons/commons-lang.jar"/>
		<copy todir="${designer.lib.dir}" file="${etc.lib.dir}/apache-commons/commons-logging-1.0.4.jar"/>
		<copy todir="${designer.lib.dir}" file="${etc.lib.dir}/apache-commons/commons-codec-1.3.jar"/>
		<copy todir="${designer.lib.dir}" file="${admin-console.dist.file}"/>
	</target>
	
	<target name="recreate.database" 
		description="Recreates the database schema from the SQL scripts">
		<ant antfile="${etc.db.create.file}" target="drop.database" inheritrefs="true"/>
		<ant antfile="${etc.db.create.file}" target="create.database" inheritrefs="true"/>
		<ant antfile="${etc.db.create.file}" target="populate.database" inheritrefs="true"/>
	</target>
	
	<target name="generate.domain.objects"
		description="Generates Java classes from the HBMs">
		<ant antfile="${logic.build.file}" target="generate.domain.objects" inheritrefs="true"/>
	</target>
	
	<target name="dist.admin-console" depends="build.admin-console"
		description="Creates admin-console.war and copies to Tomcat">
		<copy tofile="${tomcat.home}/webapps/admin-console.war" file="${admin-console.dist.file}" overwrite="true"/>
	</target>
	
	<target name="dist.license-console" depends="build.license-console"
		description="Creates license-console.war and copies to Tomcat">
		<copy tofile="${tomcat.home}/webapps/license-console.war" file="${license-console.dist.file}" overwrite="true"/>
	</target>

	<target name="dist.bootstrap" depends="build.common, build.bootstrap"
		description="Creates the bootstrap.jar and dependencies, copies them along with the service wrapper components">
		<delete dir="${bootstrap.home}" failonerror="false"/>
		<mkdir dir="${bootstrap.home}"/>
		<!-- Copy all the referenced JARs -->
		<mkdir dir="${bootstrap.home}/lib"/>
		<copy todir="${bootstrap.home}/lib" flatten="true">
			<fileset file="${bootstrap.dist.file}"/>
			<fileset file="${player.dist.file}"/>
			<fileset dir="${etc.base.dir}/.." 
				includesfile="${bootstrap.base.dir}/shared.jars"/>
			<fileset dir="${etc.base.dir}/.." 
				includesfile="${player.base.dir}/shared.jars"/>
		</copy>
		<!-- Service wrapper and SQL -->
		<copy todir="${bootstrap.home}/service-wrapper" >
			<fileset dir="${etc.base.dir}/service-wrapper">
				<include name="**/*.*"/>
			</fileset>
		</copy>
		<mkdir dir="${bootstrap.home}/service-wrapper/logs"/>
		<mkdir dir="${bootstrap.home}/conf"/>
		<copy todir="${bootstrap.home}/conf">
			<fileset dir="${etc.base.dir}/client-config">
				<include name="bootstrap.properties"/>
				<include name="player.properties"/>
			</fileset>
		</copy>
		<!-- DLLs -->
		<mkdir dir="${bootstrap.home}/native"/>
		<copy todir="${bootstrap.home}/native" flatten="true">
			<fileset dir="${etc.lib.dir}">
				<include name="**/*.dll"/>
				<include name="**/*.so"/>
				<include name="**/*.bin"/>
			</fileset>
		</copy>
		<!-- Property replacement -->
		<antcall target="zz.replace.properties">
			<param name="file" value="${bootstrap.home}/conf/bootstrap.properties" />
			<param 
				name="properties" 
				value="bootstrap.home,
				vlc.home,
				mplayer.file,
				jdbc.driver.class,
				admin.server.host,
				admin.server.port" />
		</antcall>
		<antcall target="zz.replace.properties">
			<param name="file" value="${bootstrap.home}/conf/player.properties" />
			<param 
				name="properties" 
				value="bootstrap.home,
				vlc.home,
				mplayer.file,
				jdbc.driver.class,
				admin.server.host,
				admin.server.port" />
		</antcall>
		<!-- Run-time folders --> 
		<mkdir dir="${bootstrap.home}/files/data"/>
		<mkdir dir="${bootstrap.home}/files/deployment"/>
		<mkdir dir="${bootstrap.home}/files/resource"/>
		<mkdir dir="${bootstrap.home}/files/print-screens"/>
		<mkdir dir="${bootstrap.home}/player"/>
		<mkdir dir="${bootstrap.home}/vlc"/>
	</target>	
	
	<target name="dist.derby" depends="build.bootstrap"
		description="Creates a Derby distribution">
		<delete dir="${derby.home}" failonerror="false"/>
		<mkdir dir="${derby.home}"/>
		<!-- Copy all required JARs -->
		<mkdir dir="${derby.home}/lib"/>
		<copy todir="${derby.home}/lib" flatten="true">
			<fileset dir="${etc.lib.dir}">
				<include name="derby/*"/>
				<include name="log4j/*"/>
				<include name="apache-commons/commons-dbcp*"/>
				<include name="apache-commons/commons-collections*"/>
				<include name="apache-commons/commons-io*"/>
				<include name="apache-commons/commons-pool*"/>
			</fileset>
		</copy>
		<!-- Service wrapper and SQL -->
		<copy todir="${derby.home}/service-wrapper" >
			<fileset dir="${etc.base.dir}/service-wrapper">
				<include name="**/*Derby*.*"/>
				<include name="**/wrapper.exe"/>
				<include name="conf/**/*.*"/>
				<include name="lib/**/*.*"/>
			</fileset>
		</copy>
		<mkdir dir="${derby.home}/service-wrapper/logs"/>
		<!-- Config files -->
		<mkdir dir="${derby.home}/conf"/>
		<copy tofile="${derby.home}/conf/bootstrap.properties" 
			file="${etc.base.dir}/client-config/derby.properties"/>
		<!-- Individual class files -->
		<copy todir="${derby.home}/conf" flatten="false">
			<fileset dir="${bootstrap.base.dir}/build/classes">
				<include name="**/LaunchDerby.class"/>
				<include name="**/Config.class"/>
				<include name="**/log4j.properties"/>
			</fileset>
			<fileset dir="${common.base.dir}/build/classes">
				<include name="**/DBUtils.class"/>
				<include name="**/StreamUtils.class"/>
				<include name="**/GenericSystemException.class"/>
				<include name="**/BaseUncheckedException.class"/>
			</fileset>
		</copy>
		<!-- Property replacement -->
		<antcall target="zz.replace.properties">
			<param name="file" value="${derby.home}/conf/bootstrap.properties" />
			<param 
				name="properties" 
				value="derby.home,
				jdbc.driver.class" />
		</antcall>
		<!-- Run-time folders --> 
		<mkdir dir="${derby.home}/data"/>
	</target>	
	
	<target name="dist.player" depends="build.common, build.player"
		description="Creates player.jar"/>
	
	<target name="dist.designer" depends="copy.files.to.designer"
		description="Creates the designer distributable">
		<ant antfile="${designer.build.file}" dir="${designer.build.dir}" inheritrefs="true"/>
	</target>
	
	<!-- 
		Creates the installer for the re-distributable client (player, bootstrap,...)
	-->
	<target name="create.client.installer" depends="dist.player, dist.bootstrap"
		description="Creates the player installer">
		
		<antcall target="prepare.client.installer.folder" inheritrefs="true"/>
		
		<antcall target="preprocess.client.installer.files" inheritrefs="true"/>
		
		<!-- Build the setup installer -->
		<antcall target="zz.build.installer">
			<param name="installer.file" value="${player.installer.dir}/installer.mpi" />
			<param name="version" value="${player.version}" />
			<param name="destdir" value="${player.installer.dir}" />
		</antcall>
		<!-- Build the update installer -->
		<antcall target="zz.build.installer">
			<param name="installer.file" value="${player.installer.dir}/update.mpi" />
			<param name="version" value="${player.version}" />
			<param name="destdir" value="${player.installer.dir}" />
		</antcall>
	</target>
	
	<!-- 
		Creates the installer for the re-distributable server (designer, admin console)
	-->
	<target name="create.server.installer" depends="dist.derby, dist.designer, dist.admin-console"
		description="Creates the player installer">
		
		<antcall target="prepare.server.installer.folder" inheritrefs="true"/>
		
		<antcall target="preprocess.server.installer.files" inheritrefs="true"/>

		<!-- Build the setup installer -->
		<antcall target="zz.build.installer">
			<param name="installer.file" value="${server.installer.dir}/installer.mpi" />
			<param name="version" value="${server.version}" />
			<param name="destdir" value="${server.installer.dir}" />
		</antcall>
		<!-- Build the update installer -->
		<antcall target="zz.build.installer">
			<param name="installer.file" value="${server.installer.dir}/update.mpi" />
			<param name="version" value="${server.version}" />
			<param name="destdir" value="${server.installer.dir}" />
		</antcall>
	</target>
	
	<!-- ========== AUXILIARY TARGETS DURING BUILD ============= -->
	
	<target name="prepare.client.installer.folder">
		
		<delete dir="${player.installer.dir}" failonerror="false"/>
		<mkdir dir="${player.installer.dir}"/>
		<!-- Copy installer -->
		<copy flatten="false" todir="${player.installer.dir}">
			<fileset dir="${etc.installer.dir}/client">
				<include name="**/*.*"/>
				<include name="**"/>
			</fileset>
		</copy>
		<!-- Copy VLC -->
		<copy 
			todir="${player.installer.dir}/vlc" 
			file="${vlc.installer.path}"/>
		<!-- Copy MPlayer -->
		<copy 
			todir="${player.installer.dir}/mplayer" 
			file="${mplayer.installer.path}"/>
		<!-- Copy the player/bootstrap files -->
		<copy flatten="false" todir="${player.installer.dir}/player">
			<!-- We are using bootstrap.home as we have already deployed there -->
			<fileset dir="${bootstrap.home}">
				<include name="**/*.*"/>
				<include name="**"/>
			</fileset>
		</copy>
		<!-- Copy sample -->
		<copy flatten="false" todir="${player.installer.dir}/player/sample">
			<fileset dir="${etc.base.dir}/content/sample1">
				<include name="**/*.*"/>
			</fileset>
		</copy>
		<!-- Copy ComfyJ DLL and licenses -->
		<copy todir="${player.installer.dir}/player/conf">
			<fileset dir="${comfyj.license.dir}">
				<include name="*.lic"/>
			</fileset>
			<fileset dir="${etc.lib.dir}/jniwrap">
				<include name="*.dll"/>
			</fileset>
		</copy>
	</target>
	
	
	<target name="prepare.server.installer.folder">
		<delete dir="${server.installer.dir}" failonerror="false"/>
		<mkdir dir="${server.installer.dir}"/>
		<!-- Copy designer -->
		<mkdir dir="${server.installer.dir}/designer"/>
		<copy todir="${server.installer.dir}/designer">
			<fileset dir="${designer.dist.dir}">
				<include name="${designer.dist.filename}"/>
			</fileset>
		</copy>
		
		<!-- Copy installer files -->
		<copy todir="${server.installer.dir}">
			<fileset dir="${etc.installer.dir}/server">
				<include name="**/*.*"/>
				<include name="**"/>
			</fileset>
		</copy>
		<!-- Copy VLC -->
		<copy 
			todir="${server.installer.dir}/vlc" 
			file="${vlc.installer.path}"/>
		<!-- Copy MPlayer -->
		<copy 
			todir="${server.installer.dir}/mplayer" 
			file="${mplayer.installer.path}"/>
		<!-- Copy Tomcat -->
		<copy 
			todir="${server.installer.dir}/tomcat" 
			file="${tomcat.installer.path}"/>
		<!-- Copy Tomcat config files -->
		<copy todir="${server.installer.dir}/tomcat">
			<fileset dir="${etc.base.dir}/tomcat/admin-console" includes="*.xml"/>
		</copy>
		<!-- Copy the admin console WAR -->
		<copy 
			todir="${server.installer.dir}/admin-console"
			file="${admin-console.dist.file}"/>
		<!-- Copy the admin console modified settings file -->
		<copy 
			todir="${server.installer.dir}/admin-console"
			file="${logic.src.dir}/console-settings.xml"/>
		<!-- Copy Derby distro -->
		<copy 
			todir="${server.installer.dir}/db">
			<fileset dir="${derby.home}">
				<include name="**/*.*"/>
			</fileset>
		</copy>
		<!-- Copy ComfyJ DLL and licenses -->
		<copy todir="${server.installer.dir}/etc" flatten="true">
			<fileset dir="${comfyj.license.dir}">
				<include name="*.lic"/>
			</fileset>
			<fileset dir="${etc.lib.dir}/jniwrap">
				<include name="*.dll"/>
			</fileset>
		</copy>
	</target>
	
	<target name="preprocess.client.installer.files">
		<!-- Replace previous bootstrap.home in the conf files -->
		<replace 
			dir="${player.installer.dir}/player/conf" 
			token="${bootstrap.home}" 
			value="$INSTALL_PATH$">
			<include name="player.properties"/>
			<include name="bootstrap.properties"/>
		</replace>
		<!-- Replace previous vlc.home in the conf files -->
		<replace 
			dir="${player.installer.dir}/player/conf" 
			token="${vlc.home}" 
			value="$VLC_INSTALL_PATH$">
			<include name="player.properties"/>
			<include name="bootstrap.properties"/>
		</replace>
		<!-- Replace previous mplayer.file in the conf files -->
		<replace 
			dir="${player.installer.dir}/player/conf" 
			token="${mplayer.file}" 
			value="$MPLAYER_HOME$/mplayer.exe">
			<include name="player.properties"/>
			<include name="bootstrap.properties"/>
		</replace>
		<!-- Replace default player id with placeholder in the conf files -->
		<replaceregexp 
			file="${player.installer.dir}/player/conf/bootstrap.properties" 
			match="installation_id=\w+" 
			replace="installation_id=$player.id$"
			flags="gi"
			byline="true"/>
		<!-- Replace server host and port with placeholders in the conf files -->
		<replaceregexp 
			file="${player.installer.dir}/player/conf/bootstrap.properties" 
			match="server_url=http://\w+:\w+/" 
			replace="server_url=http://$SERVER_HOST$:$SERVER_PORT$/"
			flags="gi"
			byline="true"/>
		<!-- Replace all absolute base dirs with current base dir -->
		<replace 
			file="${player.installer.dir}/installer.mpi" 
			token="C:/workdir-ds/player/dist/installer" 
			value="${player.installer.dir}"/>
		<replace 
			file="${player.installer.dir}/update.mpi" 
			token="C:/workdir-ds/player/dist/installer" 
			value="${player.installer.dir}"/>
		<!-- Replace VLC installer name --> 
		<replace 
			file="${player.installer.dir}/installer.mpi" 
			token="vlc-1.0.2-win32.exe" 
			value="${vlc.installer.file}"/>
		<!-- Replace JDK base dir with JDK base dir -->
		<replace 
			file="${player.installer.dir}/installer.mpi" 
			token="C:/dbin/jdk1.6.0_11/jre" 
			value="${jdk.home}/jre"/>
		<!-- Fix C:\ to C:/ -->
		<replace 
			file="${player.installer.dir}/installer.mpi" 
			token=":\" 
			value=":/"/>
		<replace 
			file="${player.installer.dir}/update.mpi" 
			token=":\" 
			value=":/"/>
	</target>
	

	<target name="preprocess.server.installer.files">
		<!-- Replace derby.home in the conf files -->
		<replace 
			file="${server.installer.dir}/db/conf/bootstrap.properties" 
			token="${derby.home}" 
			value="$INSTALL_PATH$"/>
		<!-- Replace DB path for Tomcat -->
		<replace 
			file="${server.installer.dir}/tomcat/server.xml" 
			token="${derby.home}" 
			value="$INSTALL_PATH$"/>
		<!-- Replace base paths and server host/port in console-config -->
		<replaceregexp 
			file="${server.installer.dir}/admin-console/console-settings.xml" 
			match="ps-root-folder.+?ps-root-folder" 
			replace="ps-root-folder&gt;$INSTALL_PATH$/print-screens/&lt;/ps-root-folder"
			flags="i"/>
		<replaceregexp 
			file="${server.installer.dir}/admin-console/console-settings.xml" 
			match="content-root-folder.+?content-root-folder" 
			replace="content-root-folder&gt;$INSTALL_PATH$/content/&lt;/content-root-folder"
			flags="i"/>
		<replaceregexp 
			file="${server.installer.dir}/admin-console/console-settings.xml" 
			match="temp-folder.+?temp-folder" 
			replace="temp-folder&gt;$INSTALL_PATH$/temp-files&lt;/temp-folder"
			flags="i"/>
		<replaceregexp 
			file="${server.installer.dir}/admin-console/console-settings.xml" 
			match="host.+?host" 
			replace="host&gt;$HOST$&lt;/host"
			flags="i"/>
		<replaceregexp 
			file="${server.installer.dir}/admin-console/console-settings.xml" 
			match="port.+?port" 
			replace="port&gt;$PORT$&lt;/port"
			flags="i"/>
		<!-- Replace all absolute base dirs with current base dir in installer file -->
		<replace 
			file="${server.installer.dir}/installer.mpi" 
			token="C:/workdir-ds/designer.build/installer" 
			value="${server.installer.dir}"/>
		<replace 
			file="${server.installer.dir}/update.mpi" 
			token="C:/workdir-ds/designer.build/installer" 
			value="${server.installer.dir}"/>
		<!-- Replace VLC installer name --> 
		<replace 
			file="${server.installer.dir}/installer.mpi" 
			token="vlc-1.0.2-win32.exe" 
			value="${vlc.installer.file}"/>
		<!-- Replace Tomcat installer name --> 
		<replace 
			file="${server.installer.dir}/installer.mpi" 
			token="apache-tomcat-6.0.18.zip" 
			value="${tomcat.installer.file}"/>
		<!-- Replace Tomcat dest folder --> 
		<replace 
			file="${server.installer.dir}/installer.mpi" 
			token="apache-tomcat-6.0.18" 
			value="${tomcat.version.string}"/>
		<!-- Replace absolute JDK dir with current JDK dir -->
		<replace 
			file="${server.installer.dir}/installer.mpi" 
			token="C:/dbin/jdk1.6.0_11" 
			value="${jdk.home}"/>
		<!-- Fix C:\ to C:/ -->
		<replace 
			file="${server.installer.dir}/installer.mpi" 
			token=":\" 
			value=":/"/>
		<replace 
			file="${server.installer.dir}/update.mpi" 
			token=":\" 
			value=":/"/>
	</target>

</project>